{"version":3,"file":"clockworks.min.js","sources":["../src/worker.js","../src/clockworks.js"],"sourcesContent":["/**\n * ClockWorks Worker file\n *\n * @author ReeceM\n * @see https://github.com/reecem/clockworks\n * @copyright\n */\nexport default function () {\n\n\n\tlet timerIds = {};\n\n\tfunction startTimers(timers) {\n\t\ttimers = Array.isArray(timers) ? timers : [timers];\n\n\t\ttimers.forEach((timer, index) => {\n\t\t\tstartTimer(timer, index);\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tfunction startTimer(timer, index) {\n\t\tvar index = index != null ? index : Math.random();\n\n\t\tclearInterval(timerIds[timer.name]);\n\n\t\ttimerIds[timer.name] = setInterval(() => {\n\t\t\tpostMessage({\n\t\t\t\ttype: 'TIMER',\n\t\t\t\ttimer: timer,\n\t\t\t})\n\t\t}, timer.time);\n\n\t\treturn true;\n\t}\n\tonmessage = (message) => {\n\t\tif (!message.data) {\n\t\t\tpostMessage(null);\n\t\t}\n\n\t\tswitch (message.data.type) {\n\t\t\tcase 'TIMER':\n\t\t\t\tstartTimer(message.data.timer);\n\t\t\t\tpostMessage({\n\t\t\t\t\t'type': 'STATUS',\n\t\t\t\t\t'message': 'Okay'\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'LIST':\n\t\t\t\tif (startTimers(message.data.timers)) {\n\t\t\t\t\tpostMessage({\n\t\t\t\t\t\t'type': 'STATUS',\n\t\t\t\t\t\t'message': 'Okay'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'REMOVE':\n\t\t\t\tclearInterval(timerIds[message.data.timer.name]);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.log(message);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n}\n","import {\n\tversion\n} from \"../package.json\";\nimport workerFile from './worker';\n\n/**\n * Creates and manage web worker timer section.\n *\n * @version 0.1.0\n */\nexport default class ClockWorks {\n\tversion = version\n\t/**\n\t * Create a new list of timers\n\t * @param {Array} timers the list of timers to install\n\t */\n\tconstructor(_timers = []) {\n\t\tthis.timers = _timers;\n\n\t\tif (window.Worker) {\n\t\t\tthis.startWorker();\n\t\t} else {\n\t\t\tthis.spawnLocalTimers(_timers);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add timers to the list.\n\t */\n\tpush(timer) {\n\t\tvar index = this.timers.push(timer);\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'TIMER',\n\t\t\ttimer: {\n\t\t\t\tname: timer.name,\n\t\t\t\ttime: timer.time,\n\t\t\t\tindex: index - 1\n\t\t\t}\n\t\t});\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Remove timer\n\t */\n\tpull(timer) {\n\t\tif (timer instanceof Object) {\n\t\t\tthis.timers = this.timers.filter((timersTimer, index) => {\n\t\t\t\treturn timersTimer.name != timer.name;\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('timer needs to be an object to be able to remove');\n\t\t}\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'REMOVE',\n\t\t\ttimer: {\n\t\t\t\tname: timer.name\n\t\t\t},\n\t\t})\n\t}\n\n\t/**\n\t * The timers to start in the external workers\n\t *\n\t * @param {Array} timers list of timers\n\t */\n\tstartWorker() {\n\t\tvar blob = new Blob([`(${workerFile.toString()})();`], { type: 'text/javascript' });\n\t\tthis.worker = new Worker(window.URL.createObjectURL(blob));\n\n\t\t// this.worker = new Worker('../dist/worker.js');\n\t\tthis.worker.onmessage = this.handleWorkerMessages.bind(this);\n\n\t\tif (this.timers.length >= 1) {\n\t\t\tvar newTimers = this.timers.reduce((taggedTimers, curr, index) => {\n\t\t\t\ttaggedTimers.push({\n\t\t\t\t\tname: curr.name,\n\t\t\t\t\ttime: curr.time,\n\t\t\t\t\tindex: index\n\t\t\t\t});\n\t\t\t\treturn taggedTimers;\n\t\t\t}, [])\n\n\t\t\tthis.worker.postMessage({\n\t\t\t\ttype: 'LIST',\n\t\t\t\ttimers: newTimers\n\t\t\t});\n\t\t}\n\n\t}\n\n\thandleWorkerMessages(message) {\n\t\tif (!message.data) {\n\t\t\tconsole.debug('Worker sending blank messages...');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (message.data.type) {\n\t\t\tcase 'STATUS':\n\t\t\t\tconsole.log(message.data.message)\n\t\t\t\tbreak;\n\t\t\tcase 'TIMER':\n\t\t\t\tconst index = message.data.timer.index;\n\t\t\t\ttry {\n\t\t\t\t\tthis.timers[index].callback(message.data);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.debug(message.data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Starts the local system timers\n\t */\n\tspawnLocalTimers(timers) {\n\t\t// timers.forEach((timer, index) => {\n\t\t// \tconst intervalName = `${timer.name}-${index}`;\n\t\t// \tconsole.info(intervalName);\n\t\t// \tclearInterval(this.timers[intervalName]);\n\t\t// \tthis.timers[intervalName] = setInterval(() => { timer.callback('internal') }, timer.time);\n\t\t// \tconsole.log(this.timers[intervalName])\n\t\t// });\n\t}\n}\n"],"names":["timerIds","startTimer","timer","index","clearInterval","name","setInterval","postMessage","type","time","onmessage","message","data","timers","Array","isArray","forEach","console","log","_timers","version","this","window","Worker","startWorker","spawnLocalTimers","push","worker","pull","Object","Error","filter","timersTimer","blob","Blob","workerFile","toString","URL","createObjectURL","handleWorkerMessages","bind","length","newTimers","reduce","taggedTimers","curr","callback","error","debug"],"mappings":"gMAUC,IAAIA,EAAW,GAYf,SAASC,EAAWC,EAAOC,GAY1B,OAXAC,cAEcJ,EAASE,EAAMG,OAE7BL,EAASE,EAAMG,MAAQC,YAAY,WAClCC,YAAY,CACXC,KAAM,QACNN,MAAOA,KAENA,EAAMO,SAIVC,UAAY,SAACC,GAKZ,OAJKA,EAAQC,MACZL,YAAY,MAGLI,EAAQC,KAAKJ,MACpB,IAAK,QACJP,EAAWU,EAAQC,KAAKV,OACxBK,YAAY,CACXC,KAAQ,SACRG,QAAW,SAEZ,MAED,IAAK,OAtCcE,EAuCFF,EAAQC,KAAKC,QAtC/BA,EAASC,MAAMC,QAAQF,GAAUA,EAAS,CAACA,IAEpCG,QAAQ,SAACd,EAAOC,GACtBF,EAAWC,KAoCTK,YAAY,CACXC,KAAQ,SACRG,QAAW,SAGb,MAED,IAAK,SACJP,cAAcJ,EAASW,EAAQC,KAAKV,MAAMG,OAC1C,MAED,QACCY,QAAQC,IAAIP,GApDf,IAAqBE,qBCIrB,WAAYM,GASX,gBATWA,IAAAA,EAAU,SALtBC,gBAMCC,KAAKR,OAASM,EAEVG,OAAOC,OACVF,KAAKG,cAELH,KAAKI,iBAAiBN,mCASxBO,KAAA,SAAKxB,GACJ,IAAIC,EAAQkB,KAAKR,OAAOa,KAAKxB,GAW7B,OATAmB,KAAKM,OAAOpB,YAAY,CACvBC,KAAM,QACNN,MAAO,CACNG,KAAMH,EAAMG,KACZI,KAAMP,EAAMO,KACZN,MAAOA,EAAQ,KAIVA,KAMRyB,KAAA,SAAK1B,GACJ,KAAIA,aAAiB2B,QAKpB,UAAUC,MAAM,oDAJhBT,KAAKR,OAASQ,KAAKR,OAAOkB,OAAO,SAACC,EAAa7B,GAC9C,OAAO6B,EAAY3B,MAAQH,EAAMG,OAMnCgB,KAAKM,OAAOpB,YAAY,CACvBC,KAAM,SACNN,MAAO,CACNG,KAAMH,EAAMG,WAUfmB,YAAA,WACC,IAAIS,EAAO,IAAIC,KAAK,KAAKC,EAAWC,mBAAmB,CAAE5B,KAAM,oBAM/D,GALAa,KAAKM,OAAS,IAAIJ,OAAOD,OAAOe,IAAIC,gBAAgBL,IAGpDZ,KAAKM,OAAOjB,UAAYW,KAAKkB,qBAAqBC,KAAKnB,MAEnDA,KAAKR,OAAO4B,QAAU,EAAG,CAC5B,IAAIC,EAAYrB,KAAKR,OAAO8B,OAAO,SAACC,EAAcC,EAAM1C,GAMvD,OALAyC,EAAalB,KAAK,CACjBrB,KAAMwC,EAAKxC,KACXI,KAAMoC,EAAKpC,KACXN,MAAOA,IAEDyC,GACL,IAEHvB,KAAKM,OAAOpB,YAAY,CACvBC,KAAM,OACNK,OAAQ6B,QAMXH,qBAAA,SAAqB5B,GACpB,GAAKA,EAAQC,KAKb,OAAQD,EAAQC,KAAKJ,MACpB,IAAK,SACJS,QAAQC,IAAIP,EAAQC,KAAKD,SACzB,MACD,IAAK,QACJ,IAAMR,EAAQQ,EAAQC,KAAKV,MAAMC,MACjC,IACCkB,KAAKR,OAAOV,GAAO2C,SAASnC,EAAQC,MACnC,MAAOmC,GACR9B,QAAQ8B,MAAMA,GAEf,MACD,QACC9B,QAAQ+B,MAAMrC,EAAQC,WAjBvBK,QAAQ+B,MAAM,uCAyBhBvB,iBAAA,SAAiBZ"}